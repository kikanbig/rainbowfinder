/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–∞ OpenWeatherMap
 * 
 * –ó–∞–ø—É—Å–∫: node test-api.js
 */

const API_KEY = 'be314fc63d2ce6bc8c976a4e60be8955';

// –¢–µ—Å—Ç–∏—Ä—É–µ–º API –¥–ª—è –ú–æ—Å–∫–≤—ã
const testCoords = {
  lat: 55.7558,  // –ú–æ—Å–∫–≤–∞
  lon: 37.6176
};

async function testWeatherAPI() {
  console.log('üåà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–ª—é—á–∞ OpenWeatherMap...\n');

  try {
    // –¢–µ—Å—Ç 1: –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞
    console.log('üìç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –¥–ª—è –ú–æ—Å–∫–≤—ã...');
    const currentWeatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${testCoords.lat}&lon=${testCoords.lon}&appid=${API_KEY}&units=metric&lang=ru`;
    
    const currentResponse = await fetch(currentWeatherUrl);
    
    if (!currentResponse.ok) {
      throw new Error(`HTTP ${currentResponse.status}: ${currentResponse.statusText}`);
    }
    
    const currentData = await currentResponse.json();
    
    console.log('‚úÖ –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`   –ì–æ—Ä–æ–¥: ${currentData.name}`);
    console.log(`   –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${currentData.main.temp}¬∞C`);
    console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${currentData.weather[0].description}`);
    console.log(`   –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${currentData.main.humidity}%`);
    console.log(`   –í–∏–¥–∏–º–æ—Å—Ç—å: ${currentData.visibility / 1000}–∫–º`);
    console.log(`   –û–±–ª–∞—á–Ω–æ—Å—Ç—å: ${currentData.clouds.all}%\n`);

    // –¢–µ—Å—Ç 2: –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞
    console.log('üå¨Ô∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞...');
    const airQualityUrl = `https://api.openweathermap.org/data/2.5/air_pollution?lat=${testCoords.lat}&lon=${testCoords.lon}&appid=${API_KEY}`;
    
    const airResponse = await fetch(airQualityUrl);
    
    if (!airResponse.ok) {
      console.log('‚ö†Ô∏è –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)');
    } else {
      const airData = await airResponse.json();
      console.log('‚úÖ –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞ –ø–æ–ª—É—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
      console.log(`   –ò–Ω–¥–µ–∫—Å –∫–∞—á–µ—Å—Ç–≤–∞ –≤–æ–∑–¥—É—Ö–∞: ${airData.list[0].main.aqi}/5\n`);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è —Ä–∞–¥—É–≥–∏
    console.log('üåà –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è —Ä–∞–¥—É–≥–∏...');
    
    const now = new Date();
    const hour = now.getHours();
    const sunAngle = calculateApproxSunAngle(hour);
    
    console.log(`   –ü—Ä–∏–º–µ—Ä–Ω—ã–π —É–≥–æ–ª —Å–æ–ª–Ω—Ü–∞: ${sunAngle}¬∞`);
    console.log(`   –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —É–≥–æ–ª –¥–ª—è —Ä–∞–¥—É–≥–∏: < 42¬∞`);
    
    const rainCondition = currentData.weather[0].main.includes('Rain') || 
                         currentData.weather[0].main.includes('Drizzle') ||
                         currentData.main.humidity > 80;
    
    const visibilityCondition = currentData.visibility > 5000; // > 5–∫–º
    const sunAngleCondition = sunAngle < 42 && sunAngle > 0;
    
    console.log(`   –í–æ–¥—è–Ω—ã–µ –∫–∞–ø–ª–∏: ${rainCondition ? '‚úÖ' : '‚ùå'} (–¥–æ–∂–¥—å/–≤—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å)`);
    console.log(`   –í–∏–¥–∏–º–æ—Å—Ç—å: ${visibilityCondition ? '‚úÖ' : '‚ùå'} (> 5–∫–º)`);
    console.log(`   –£–≥–æ–ª —Å–æ–ª–Ω—Ü–∞: ${sunAngleCondition ? '‚úÖ' : '‚ùå'} (0¬∞ < —É–≥–æ–ª < 42¬∞)`);
    
    const rainbowPossible = rainCondition && visibilityCondition && sunAngleCondition;
    
    console.log(`\nüéØ –†–∞–¥—É–≥–∞ —Å–µ–π—á–∞—Å –≤–æ–∑–º–æ–∂–Ω–∞: ${rainbowPossible ? '‚úÖ –î–ê!' : '‚ùå –ù–ï–¢'}`);
    
    if (rainbowPossible) {
      console.log('üåà –û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è! –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ —Å—Ç–æ—Ä–æ–Ω—É –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é —Å–æ–ª–Ω—Ü—É!');
    } else {
      console.log('‚è≥ –î–æ–∂–¥–∏—Ç–µ—Å—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –∏–ª–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:');
    
    if (error.message.includes('401')) {
      console.error('   üîë –ü—Ä–æ–±–ª–µ–º–∞ —Å API –∫–ª—é—á–æ–º:');
      console.error('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–∞');
      console.error('   - API –∫–ª—é—á –º–æ–∂–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–æ 2 —á–∞—Å–æ–≤');
      console.error('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞');
    } else if (error.message.includes('403')) {
      console.error('   üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω:');
      console.error('   - –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤');
      console.error('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω');
    } else if (error.message.includes('ENOTFOUND')) {
      console.error('   üåê –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é:');
      console.error('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É');
      console.error('   - –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º—ã —Å DNS');
    } else {
      console.error(`   üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ${error.message}`);
    }
  }
}

// –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç —É–≥–ª–∞ —Å–æ–ª–Ω—Ü–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ä–µ–º–µ–Ω–∏ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)
function calculateApproxSunAngle(hour) {
  // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ—á–Ω—ã–µ –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã
  
  if (hour < 6 || hour > 20) return -10; // –ù–æ—á—å
  if (hour >= 11 && hour <= 13) return 60; // –ü–æ–ª–¥–µ–Ω—å - –≤—ã—Å–æ–∫–æ–µ —Å–æ–ª–Ω—Ü–µ
  if (hour >= 6 && hour <= 8) return 20;   // –£—Ç—Ä–æ - —Ö–æ—Ä–æ—à–æ –¥–ª—è —Ä–∞–¥—É–≥–∏
  if (hour >= 18 && hour <= 20) return 25; // –í–µ—á–µ—Ä - —Ö–æ—Ä–æ—à–æ –¥–ª—è —Ä–∞–¥—É–≥–∏
  return 45; // –î–µ–Ω—å - —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–æ
}

console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...\n');
console.log(`üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π API –∫–ª—é—á: ${API_KEY.substring(0, 8)}...${API_KEY.substring(-4)}`);
console.log(`üìç –¢–µ—Å—Ç–æ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è: –ú–æ—Å–∫–≤–∞ (${testCoords.lat}, ${testCoords.lon})\n`);

testWeatherAPI(); 